{"title":"","date":"2025-02-05T20:21:46.574Z","updated":"2025-02-05T20:21:46.574Z","content":"// var script = document.createElement(\"script\");\n// script.type = \"text/javascript\";\n// script.id = 'clustrmaps';\n// script.src =  '//clustrmaps.com/map_v2.js?d=NN6CrFgiT6g5STfQdgu1v91lB8TY5dqmU7iLIxocfY0&cl=ffffff&w=a';\n// document.body.appendChild(script);\n// 12-22\n// // 实例化 VConsole 对象\n// var vConsole = new VConsole();\n// // 启用 VConsole\n// vConsole.show();\n\naddMobileLive2dCss();\nJinx();\nipMap();\n\n// app环境不添加网易云外链\n// app环境网易云外链不支持，自动加载http的东西，和博客网站https冲突\nif (isMobile()) {\n  addMobileLive2dCss();\n} else {\n  musicBox();\n  removeMusicBox();\n}\n\n// 写这里应该没人发现吧😃😃😃\nfunction Jinx() {\n  console.log(\n    \"%c Jinx天天开心哈哈哈哈哈哈 %c https://jinx66.gitee.io/\",\n    \"color:#fff;font-size: 14px;font-family: serif;background:linear-gradient(90deg,#ff4d91,#ff4d91);padding:15px 10px;\",\n    \"color:#000;background:linear-gradient(90deg,#ff4d91,#ffffff);padding:15px 10px;font-size: 14px;font-family: serif;\"\n  );\n}\n\nfunction ipMap() {\n  //添加iframe标签\n  var body = document.getElementsByTagName(\"body\");\n  var div = document.createElement(\"div\");\n  div.innerHTML =\n    '<a href=\"https://clustrmaps.com/site/1bv4l\" title=\"Visit tracker\"><img src=\"//www.clustrmaps.com/map_v2.png?d=NN6CrFgiT6g5STfQdgu1v91lB8TY5dqmU7iLIxocfY0&cl=ffffff\"></a>';\n  div.id = \"ip-map\";\n  document.body.appendChild(div);\n}\nfunction addMobileLive2dCss() {\n  console.log(123);\n  if (isMobile()) {\n    console.log(123);\n    const link = document.createElement(\"link\");\n    link.rel = \"stylesheet\";\n    link.href = \"/css/mobileLive2d.css\"; // 替换为您CSS文件的路径\n    document.head.appendChild(link);\n  }\n}\nfunction musicBox() {\n  //添加iframe标签\n  var body = document.getElementsByTagName(\"body\");\n  var div = document.createElement(\"div\");\n  div.innerHTML =\n    '<div id=\"drag\" class=\"move\"><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=300 src=\"https://music.163.com/outchain/player?type=0&id=2327585234&auto=1&height=430\"></iframe><div class=\"mask\"></div><div class=\"close\"></div></div>';\n  document.body.appendChild(div);\n  // 拖拽功能(主要是触发三个事件：onmousedown\\onmousemove\\onmouseup)\n  var drag = document.getElementById(\"drag\");\n  var divMask = document.querySelector(\".mask\");\n\n  // 点击某物体时，用drag对象即可，move和up是全局区域，也就是整个文档通用，应该使用document对象而不是drag对象(否则，采用drag对象时物体只能往右方或下方移动)\n  drag.onmousedown = function (e) {\n    var e = e || window.event; // 兼容ie浏览器\n    var diffX = e.clientX - drag.offsetLeft; // 鼠标点击物体那一刻相对于物体左侧边框的距离=点击时的位置相对于浏览器最左边的距离-物体左边框相对于浏览器最左边的距离\n    var diffY = e.clientY - drag.offsetTop;\n\n    /* 低版本ie bug:物体被拖出浏览器可是窗口外部时，还会出现滚动条，\n                      解决方法是采用ie浏览器独有的2个方法setCapture()\\releaseCapture(),这两个方法，\n                      可以让鼠标滑动到浏览器外部也可以捕获到事件，而我们的bug就是当鼠标移出浏览器的时候，\n                      限制超过的功能就失效了。用这个方法，即可解决这个问题。注：这两个方法用于onmousedown和onmouseup中 */\n    if (typeof drag.setCapture !== \"undefined\") {\n      drag.setCapture();\n    }\n\n    divMask.style.width = \"100%\";\n    divMask.style.height = \"100%\";\n    document.onmousemove = function (e) {\n      var e = e || window.event; // 兼容ie浏览器\n      var left = e.clientX - diffX;\n      var top = e.clientY - diffY;\n\n      // 控制拖拽物体的范围只能在浏览器视窗内，不允许出现滚动条\n      if (left < 0) {\n        left = 0;\n      } else if (left > window.innerWidth - drag.offsetWidth) {\n        left = window.innerWidth - drag.offsetWidth;\n      }\n      if (top < 0) {\n        top = 0;\n      } else if (top > window.innerHeight - drag.offsetHeight) {\n        top = window.innerHeight - drag.offsetHeight;\n      }\n\n      // 移动时重新得到物体的距离，解决拖动时出现晃动的现象\n      drag.style.left = left + \"px\";\n      drag.style.top = top + \"px\";\n    };\n    document.onmouseup = function (e) {\n      // 当鼠标弹起来的时候不再移动\n      console.log(\"this\", this);\n      this.onmousemove = null;\n      this.onmouseup = null; // 预防鼠标弹起来后还会循环（即预防鼠标放上去的时候还会移动）\n\n      // 修复低版本ie bug\n      if (typeof drag.releaseCapture !== \"undefined\") {\n        drag.releaseCapture();\n      }\n\n      divMask.style.width = \"0\";\n      divMask.style.height = \"0\";\n    };\n  };\n  const draggableElement = document.getElementById(\"drag\");\n\n  // 存储上一个触摸位置的坐标\n  let lastTouchX = 0;\n  let lastTouchY = 0;\n\n  draggableElement.addEventListener(\"touchstart\", function (event) {\n    // 记录触摸开始时的位置\n    const touch = event.touches[0];\n    lastTouchX = touch.clientX;\n    lastTouchY = touch.clientY;\n  });\n\n  draggableElement.addEventListener(\"touchmove\", function (event) {\n    // 阻止默认的滚动行为\n    event.preventDefault();\n\n    // 获取当前触摸的位置\n    const touch = event.touches[0];\n    const currentTouchX = touch.clientX;\n    const currentTouchY = touch.clientY;\n\n    // 计算移动距离\n    const deltaX = currentTouchX - lastTouchX;\n    const deltaY = currentTouchY - lastTouchY;\n\n    // 获取元素当前的位置\n    let elementX = parseFloat(draggableElement.style.left) || 0;\n    let elementY = parseFloat(draggableElement.style.top) || 0;\n\n    // 更新元素的位置\n    draggableElement.style.left = elementX + deltaX + \"px\";\n    draggableElement.style.top = elementY + deltaY + \"px\";\n\n    // 更新上一个触摸位置的坐标\n    lastTouchX = currentTouchX;\n    lastTouchY = currentTouchY;\n  });\n\n  draggableElement.addEventListener(\"touchend\", function (event) {\n    // 触摸结束时的处理（可选）\n  });\n}\n\nfunction removeMusicBox() {\n  var myBtn = document.querySelector(\".close\");\n  myBtn.addEventListener(\"click\", function () {\n    var musicBox = document.querySelector(\".move\");\n    musicBox.style.display = \"none\";\n    musicBox.remove();\n  });\n}\nfunction isMobile() {\n  let flag = navigator.userAgent.match(\n    /(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i\n  );\n  return flag;\n}\n","comments":true}